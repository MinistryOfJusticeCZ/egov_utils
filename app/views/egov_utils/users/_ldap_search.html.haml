= bootstrap_form_for(:search, url: search_users_path(format: :json), html: {id: 'user_search_form'}) do |f|
  = f.text_field(:q, id: 'search_q', label: {text: t('label_search'), class: 'sr-only'}, placeholder: t('label_search'))
  = f.submit t('label_search')

%table.table#users_results
  %thead
    %tr
      %th= EgovUtils::User.human_attribute_name('login')
      %th= EgovUtils::User.human_attribute_name('fullname')
      %th= t(:label_actions)
  %tbody
%table.table#groups_results
  %thead
    %tr
      %th= EgovUtils::Group.human_attribute_name('name')
      %th= t(:label_actions)
  %tbody

:javascript
  $('#user_search_form').on('submit', function(evt) {
    evt.preventDefault();
    $form = $(this);
    $.ajax(this.action, {method: 'GET', data: {q: $('#search_q').val()}}).done(function(data, status, xhr){
      $.each(['users', 'groups'], function(i, type) {
        var tbl = $('#'+type+'_results tbody');
        tbl.html('');
        $.each(data[type], function(i, entity_data) {
          var str, data_key, path, req_data;
          if( type == 'users' ) {
            str = '<td title="'+entity_data.dn.replace(/"/g, "&quot;")+'">'+entity_data.login+'</td><td>'+entity_data.firstname + ' ' + entity_data.lastname +'</td>';
            req_data = {user: entity_data};
            path = '#{users_path(format: :json)}';
          } else {
            str = '<td title="'+entity_data.dn.replace(/"/g, "&quot;")+'">'+entity_data.name+'</td>';
            req_data = {group: entity_data};
            path = '#{groups_path(format: :json)}';
          }

          $('<tr>' + str + '<td><button class="btn btn-primary add-button">Add</button></td></tr>').
            appendTo(tbl).on('click', '.add-button', function(evt){
              evt.preventDefault();
              $(this).prop('disabled', true);
              $.ajax(path, {method: 'POST', data: req_data}).done(function(addData, textStatus){
                window.location.reload();
              });
            });
        });
      });
      $form.find('input[type="submit"]').prop('disabled', false);
    });
  });
